openapi: 3.1.0
info:
  title: RAG Demo API
  version: 1.1.0
  description: |
    多模态 PDF RAG 教学项目后端接口（FastAPI）。
    - 解析管线：上传 → 异步解析 → 状态轮询 → 页图获取
    - 索引管线：Markdown 切分 → 向量化（FAISS）→ 相似检索
    - 对话：SSE 流式回答，带检索引用（citation）事件，支持内存多轮会话与一键清空
servers:
  - url: http://localhost:8001/api/v1
    description: Local dev

tags:
  - name: Health
  - name: PDF
  - name: Index
  - name: Medical Index
  # 已移除通用聊天（Chat）标签

paths:
  /health:
    get:
      tags: [Health]
      operationId: getHealth
      summary: 健康检查
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Health"

  /pdf/upload:
    post:
      tags: [PDF]
      operationId: uploadPdf
      summary: 上传 PDF（单文件）
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required: [file]
              properties:
                file:
                  type: string
                  format: binary
                replace:
                  type: boolean
                  default: true
      responses:
        "200":
          description: 上传成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PdfUploaded"

  /pdf/parse:
    post:
      tags: [PDF]
      operationId: startParse
      summary: 触发异步解析（OCR/布局可视化/Markdown 导出）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [fileId]
              properties:
                fileId:
                  type: string
      responses:
        "202":
          description: 已接受解析任务
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/JobAccepted"

  /pdf/status:
    get:
      tags: [PDF]
      operationId: getParseStatus
      summary: 查询解析状态
      parameters:
        - in: query
          name: fileId
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 当前状态
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParseStatus"

  /pdf/page:
    get:
      tags: [PDF]
      operationId: getPdfPage
      summary: 获取页图（原始/解析叠框）
      parameters:
        - in: query
          name: fileId
          required: true
          schema: { type: string }
        - in: query
          name: page
          required: true
          schema: { type: integer, minimum: 1 }
        - in: query
          name: type
          required: true
          schema:
            type: string
            enum: [original, parsed]
      responses:
        "200":
          description: PNG 图片
          content:
            image/png: {}
        "204":
          description: 尚未解析完成（请求 parsed 时）
        "404":
          description: 页码不存在或未生成

  /pdf/chunk:
    get:
      tags: [PDF]
      operationId: getCitationChunk
      summary: 根据 citationId 获取片段详情（可用于弹窗展示）
      parameters:
        - in: query
          name: citationId
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 命中的片段
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CitationChunk"

  /index/build:
    post:
      tags: [Index]
      operationId: buildIndex
      summary: 构建向量索引（FAISS）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [fileId]
              properties:
                fileId: { type: string }
      responses:
        "200":
          description: 构建完成
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean, example: true }
                  chunks: { type: integer, example: 42 }
        "409":
          description: 需先完成解析（未找到 output.md）

  /index/search:
    post:
      tags: [Index]
      operationId: searchIndex
      summary: 相似检索（Top-K）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [fileId, query]
              properties:
                fileId: { type: string }
                query: { type: string }
                k: { type: integer, default: 5, minimum: 1, maximum: 20 }
      responses:
        "200":
          description: 检索结果
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResults"
        "400":
          description: 未构建索引

  /medical/index/delete-doc:
    post:
      tags: [Medical Index]
      operationId: deleteMedicalDoc
      summary: 按 fileId 删除指定类别下的文档块（文档级删除）
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeleteDocRequest"
      responses:
        "200":
          description: 删除结果
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteDocResult"

  # 已移除 /chat 与 /chat/clear 端点（统一改用医疗聊天端点）

components:
  schemas:
    Health:
      type: object
      properties:
        status:
          type: string
          example: ok

    PdfUploaded:
      type: object
      properties:
        fileId: { type: string, example: f_7ibnm22t }
        name:   { type: string, example: "course.pdf" }
        pages:  { type: integer, example: 12 }

    JobAccepted:
      type: object
      properties:
        jobId: { type: string, example: j_abcd1234 }

    ParseStatus:
      type: object
      properties:
        status:
          type: string
          enum: [idle, parsing, ready, error]
          example: ready
        progress:
          type: integer
          minimum: 0
          maximum: 100
          example: 100
        errorMsg:
          type: string
          nullable: true

    CitationChunk:
      type: object
      properties:
        id:      { type: string, example: "f_7ibnm22t-c3" }
        fileId:  { type: string, example: "f_7ibnm22t" }
        page:    { type: integer, example: 6 }
        snippet: { type: string }
        bbox:
          type: array
          items: { type: number }
          minItems: 4
          maxItems: 4
        previewUrl:
          type: string
          example: "/api/v1/pdf/page?fileId=f_7ibnm22t&page=6&type=original"

    SearchResults:
      type: object
      properties:
        ok: { type: boolean, example: true }
        results:
          type: array
          items:
            type: object
            properties:
              text: { type: string }
              score: { type: number, format: float }
              metadata:
                type: object
                additionalProperties: true

    DeleteDocRequest:
      type: object
      required: [fileId, department, documentType]
      properties:
        fileId: { type: string, example: f_7ibnm22t }
        department: { type: string, example: "内科" }
        documentType: { type: string, example: "病历" }
        diseaseCategory:
          type: string
          nullable: true
          example: "高血压"

    DeleteDocResult:
      type: object
      properties:
        ok: { type: boolean, example: true }
        message: { type: string, example: "文档删除成功" }
        details:
          type: object
          properties:
            file_id: { type: string, example: "f_7ibnm22t" }
            department: { type: string, example: "内科" }
            document_type: { type: string, example: "病历" }
            disease_category:
              type: string
              nullable: true
            deleted_chunks: { type: integer, example: 7 }

    # 已移除通用聊天请求模型 ChatRequest
